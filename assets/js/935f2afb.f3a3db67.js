"use strict";(self.webpackChunkfhir_fli_documentation=self.webpackChunkfhir_fli_documentation||[]).push([[581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting Started","href":"/fhir_fli_documentation/docs/","docId":"getting-started","unlisted":false},{"type":"category","label":"FHIR R4b","items":[{"type":"link","label":"Core Package","href":"/fhir_fli_documentation/docs/core/fhir_r4","docId":"core/fhir_r4","unlisted":false},{"type":"link","label":"Basics of FHIR Classes","href":"/fhir_fli_documentation/docs/core/basic_object","docId":"core/basic_object","unlisted":false},{"type":"link","label":"Serialization/Deserialization","href":"/fhir_fli_documentation/docs/core/serialization","docId":"core/serialization","unlisted":false},{"type":"link","label":"Class Structure","href":"/fhir_fli_documentation/docs/core/class_structure","docId":"core/class_structure","unlisted":false},{"type":"link","label":"Polymprhic Types","href":"/fhir_fli_documentation/docs/core/polymorphic_types","docId":"core/polymorphic_types","unlisted":false},{"type":"link","label":"Primitive Types","href":"/fhir_fli_documentation/docs/core/primitive_types","docId":"core/primitive_types","unlisted":false},{"type":"link","label":"Enums","href":"/fhir_fli_documentation/docs/core/enums","docId":"core/enums","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"FHIR at Rest","items":[{"type":"link","label":"At Rest Package","href":"/fhir_fli_documentation/docs/at_rest/fhir_r4_at_rest","docId":"at_rest/fhir_r4_at_rest","unlisted":false},{"type":"link","label":"Requests","href":"/fhir_fli_documentation/docs/at_rest/restful_requests","docId":"at_rest/restful_requests","unlisted":false},{"type":"link","label":"Parameters","href":"/fhir_fli_documentation/docs/at_rest/restful_parameters","docId":"at_rest/restful_parameters","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Database Package","href":"/fhir_fli_documentation/docs/fhir_r4_db","docId":"fhir_r4_db","unlisted":false},{"type":"link","label":"Bulk Data","href":"/fhir_fli_documentation/docs/fhir_r4_bulk","docId":"fhir_r4_bulk","unlisted":false},{"type":"link","label":"FHIRPath Package","href":"/fhir_fli_documentation/docs/fhir_r4_path","docId":"fhir_r4_path","unlisted":false},{"type":"category","label":"FHIR Mapping","items":[{"type":"link","label":"FHIR Mapping Package","href":"/fhir_fli_documentation/docs/mapping/fhir_mapping","docId":"mapping/fhir_mapping","unlisted":false},{"type":"link","label":"FHIR Map Parser","href":"/fhir_fli_documentation/docs/mapping/fhirmap_parsing","docId":"mapping/fhirmap_parsing","unlisted":false},{"type":"link","label":"FHIR Mapping Engine","href":"/fhir_fli_documentation/docs/mapping/fhir_mapping_engine","docId":"mapping/fhir_mapping_engine","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Demos","items":[{"type":"link","label":"FHIR\u2011Path Demo","href":"/fhir_fli_documentation/docs/demos/fhir_path_demo","docId":"demos/fhir_path_demo","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"at_rest/fhir_r4_at_rest":{"id":"at_rest/fhir_r4_at_rest","title":"At Rest Package","description":"The package for interacting with FHIR servers.","sidebar":"tutorialSidebar"},"at_rest/restful_parameters":{"id":"at_rest/restful_parameters","title":"Parameters","description":"Introduction","sidebar":"tutorialSidebar"},"at_rest/restful_requests":{"id":"at_rest/restful_requests","title":"Requests","description":"The fhirr4at_rest library provides a streamlined way to construct RESTful API calls for FHIR operations. Instead of dealing with the complexities of building URLs, handling HTTP methods, and managing headers, this library offers a type-safe approach through a collection of request classes.","sidebar":"tutorialSidebar"},"core/basic_object":{"id":"core/basic_object","title":"Basics of FHIR Classes","description":"These classes don\'t differ much from any other object oriented classes. If you want to create a patient for instance, you do it just like this:","sidebar":"tutorialSidebar"},"core/class_structure":{"id":"core/class_structure","title":"Class Structure","description":"This document explains the structure and utility methods available in FHIR-FLI classes that allow for flexible manipulation and access to FHIR data.","sidebar":"tutorialSidebar"},"core/enums":{"id":"core/enums","title":"Enums","description":"Understanding FHIR Code Enums","sidebar":"tutorialSidebar"},"core/fhir_r4":{"id":"core/fhir_r4","title":"Core Package","description":"The core package that provides FHIR R4 resource models. The main purpose of this package is to create the base classes on which fire depends. These classes are all generated from structure definitions so they should be in line with the official fire specification. This library is mainly used for serialization/ deserialization But it does have some other functionality which is useful in certain situations.","sidebar":"tutorialSidebar"},"core/polymorphic_types":{"id":"core/polymorphic_types","title":"Polymprhic Types","description":"Understanding Polymorphic Fields","sidebar":"tutorialSidebar"},"core/primitive_types":{"id":"core/primitive_types","title":"Primitive Types","description":"Understanding FHIR Primitive Types","sidebar":"tutorialSidebar"},"core/serialization":{"id":"core/serialization","title":"Serialization/Deserialization","description":"Serialization and deserialization are core functionalities in the FHIR-FLI libraries that enable conversion between FHIR resources (represented as Dart objects) and various data formats (mostly JSON, but John likes YAML). This page explains how these processes work in FHIR-FLI and how to use them effectively in your Flutter applications.","sidebar":"tutorialSidebar"},"demos/fhir_path_demo":{"id":"demos/fhir_path_demo","title":"FHIR\u2011Path Demo","description":"Here\u2019s our live FHIRPath playground link for full screen:","sidebar":"tutorialSidebar"},"fhir_r4_bulk":{"id":"fhir_r4_bulk","title":"Bulk Data","description":"The fhirr4bulk library provides tools for working with FHIR bulk data operations, including import, export, and NDJSON file handling. This library is particularly useful for working with large datasets in FHIR, supporting the standard FHIR bulk operations ($export and $import).","sidebar":"tutorialSidebar"},"fhir_r4_db":{"id":"fhir_r4_db","title":"Database Package","description":"The package for local storage of FHIR resources. The fhirr4db library provides a lightweight, encrypted local database solution for storing and managing FHIR resources in Flutter applications. Built as a wrapper around hive_ce, this library offers a simple, type-safe API for common database operations with specific optimizations for FHIR data.","sidebar":"tutorialSidebar"},"fhir_r4_path":{"id":"fhir_r4_path","title":"FHIRPath Package","description":"The fhirr4path library provides a Dart implementation of the FHIRPath specification, allowing you to query and manipulate FHIR resources using standardized expressions. This library follows the official HL7 FHIRPath specification and integrates seamlessly with the fhir_r4 package.","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"Welcome to the Getting Started guide for FHIR-FLI. This guide will walk you through setting up and using the FHIR-FLI Dart libraries in your projects.","sidebar":"tutorialSidebar"},"mapping/fhir_mapping":{"id":"mapping/fhir_mapping","title":"FHIR Mapping Package","description":"Installation","sidebar":"tutorialSidebar"},"mapping/fhir_mapping_engine":{"id":"mapping/fhir_mapping_engine","title":"FHIR Mapping Engine","description":"Understanding the Mapping Engine","sidebar":"tutorialSidebar"},"mapping/fhirmap_parsing":{"id":"mapping/fhirmap_parsing","title":"FHIR Map Parser","description":"Understanding the StructureMap Parser","sidebar":"tutorialSidebar"}}}')}}]);