"use strict";(self.webpackChunkfhir_fli_documentation=self.webpackChunkfhir_fli_documentation||[]).push([[415],{3995:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var t=i(4848),r=i(8453);const a={id:"fhir_mapping",title:"FHIR Mapping Package"},s="Introduction to FHIR Mapping in FHIR-FLI",o={id:"mapping/fhir_mapping",title:"FHIR Mapping Package",description:"Installation",source:"@site/docs/mapping/fhir_mapping.md",sourceDirName:"mapping",slug:"/mapping/fhir_mapping",permalink:"/fhir_fli_documentation/docs/mapping/fhir_mapping",draft:!1,unlisted:!1,editUrl:"https://github.com/fhir-fli/fhir_fli_documentation/tree/main/docs/mapping/fhir_mapping.md",tags:[],version:"current",frontMatter:{id:"fhir_mapping",title:"FHIR Mapping Package"},sidebar:"tutorialSidebar",previous:{title:"FHIRPath Package",permalink:"/fhir_fli_documentation/docs/fhir_r4_path"},next:{title:"FHIR Map Parser",permalink:"/fhir_fli_documentation/docs/mapping/fhirmap_parsing"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"What is FHIR Mapping?",id:"what-is-fhir-mapping",level:2},{value:"The FHIR Mapping Language",id:"the-fhir-mapping-language",level:2},{value:"The FHIR-FLI Implementation",id:"the-fhir-fli-implementation",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"StructureMap",id:"structuremap",level:3},{value:"Resource Cache",id:"resource-cache",level:3},{value:"Builders",id:"builders",level:3},{value:"Transformation Context",id:"transformation-context",level:3},{value:"When to Use FHIR Mapping",id:"when-to-use-fhir-mapping",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"introduction-to-fhir-mapping-in-fhir-fli",children:"Introduction to FHIR Mapping in FHIR-FLI"}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  fhir_r4_mapping: ^0.4.0\n  fhir_r4: ^0.4.2\n  fhir_r4_path: ^0.4.3\n"})}),"\n",(0,t.jsx)(n.h2,{id:"what-is-fhir-mapping",children:"What is FHIR Mapping?"}),"\n",(0,t.jsx)(n.p,{children:"FHIR Mapping is a standardized approach to transforming data between different formats or structures within the FHIR ecosystem. At its core, FHIR Mapping uses a specialized language and the StructureMap resource to define how data should be transformed from one structure to another."}),"\n",(0,t.jsx)(n.p,{children:"This capability is essential for interoperability, allowing systems to translate between:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Different FHIR versions"}),"\n",(0,t.jsx)(n.li,{children:"Different implementation guides"}),"\n",(0,t.jsx)(n.li,{children:"FHIR and external data formats"}),"\n",(0,t.jsx)(n.li,{children:"Various business requirements in healthcare systems"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"the-fhir-mapping-language",children:"The FHIR Mapping Language"}),"\n",(0,t.jsx)(n.p,{children:"The FHIR Mapping Language (sometimes called FHIRMap or FHIR Map) is a domain-specific language designed for expressing transformations. It has a syntax that describes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Source and target structures"}),"\n",(0,t.jsx)(n.li,{children:"Rules for transformation"}),"\n",(0,t.jsx)(n.li,{children:"Conditions and predicates"}),"\n",(0,t.jsx)(n.li,{children:"Value manipulation and creation"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'map "http://example.org/map/PatientToPersonMap" = PatientToPerson\n\nuses "http://hl7.org/fhir/StructureDefinition/Patient" as source\nuses "http://hl7.org/fhir/StructureDefinition/Person" as target\n\ngroup PatientToPerson(source src : Patient, target tgt : Person) {\n  src.name -> tgt.name;\n  src.gender -> tgt.gender;\n  src.birthDate -> tgt.birthDate;\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"the-fhir-fli-implementation",children:"The FHIR-FLI Implementation"}),"\n",(0,t.jsx)(n.p,{children:"FHIR-FLI provides a comprehensive implementation of FHIR Mapping with two key components:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"The StructureMap Parser"})," - Converts the FHIR mapping language text into a formal StructureMap FHIR resource"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"The Mapping Engine"})," - Executes the transformations defined in a StructureMap against source data"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Our implementation brings several advantages:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type Safety"})," - Leverages Dart's strong typing for safer transformations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance"})," - Optimized for mobile and web environments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Integration"})," - Seamlessly works with the rest of the FHIR-FLI ecosystem"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Flexibility"})," - Supports complex transformation patterns"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,t.jsx)(n.p,{children:"Understanding a few key concepts will help you work effectively with FHIR Mapping in FHIR-FLI:"}),"\n",(0,t.jsx)(n.h3,{id:"structuremap",children:"StructureMap"}),"\n",(0,t.jsx)(n.p,{children:"A FHIR resource that formally defines mapping rules between different structures. It is typically authored using the FHIR mapping language and then parsed into a StructureMap resource."}),"\n",(0,t.jsx)(n.h3,{id:"resource-cache",children:"Resource Cache"}),"\n",(0,t.jsx)(n.p,{children:"A hierarchical system for managing canonical resources needed during mapping operations. It allows the mapping engine to resolve references to structure definitions, value sets, and other resources."}),"\n",(0,t.jsx)(n.h3,{id:"builders",children:"Builders"}),"\n",(0,t.jsx)(n.p,{children:"Special mutable versions of FHIR resources that facilitate incremental construction during mapping."}),"\n",(0,t.jsx)(n.h3,{id:"transformation-context",children:"Transformation Context"}),"\n",(0,t.jsx)(n.p,{children:"The environment in which a mapping operation executes, keeping track of resources generated during mapping and other state information."}),"\n",(0,t.jsx)(n.h2,{id:"when-to-use-fhir-mapping",children:"When to Use FHIR Mapping"}),"\n",(0,t.jsx)(n.p,{children:"FHIR Mapping is particularly useful when:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You need to transform data between different FHIR versions or profiles"}),"\n",(0,t.jsx)(n.li,{children:"You're integrating with legacy systems that don't use FHIR natively"}),"\n",(0,t.jsx)(n.li,{children:"You need to customize data flows between different parts of your application"}),"\n",(0,t.jsx)(n.li,{children:"You're implementing complex validation or business rules during data transformation"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"The following pages will dive deeper into:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/fhir_fli_documentation/docs/mapping/fhirmap_parsing",children:"Using the StructureMap Parser"})," - How to convert mapping language text to StructureMap resources"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/fhir_fli_documentation/docs/mapping/fhir_mapping_engine",children:"Working with the Mapping Engine"})," - How to execute mappings and transform data"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"By the end of these guides, you'll have a solid understanding of how to use FHIR Mapping in your Dart applications with FHIR-FLI."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(6540);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);