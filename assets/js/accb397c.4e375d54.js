"use strict";(self.webpackChunkfhir_fli_documentation=self.webpackChunkfhir_fli_documentation||[]).push([[46],{513:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>h});var t=r(4848),s=r(8453);const a={id:"restful_requests",title:"Requests"},i="RESTful Requests",o={id:"at_rest/restful_requests",title:"Requests",description:"The fhirr4at_rest library provides a streamlined way to construct RESTful API calls for FHIR operations. Instead of dealing with the complexities of building URLs, handling HTTP methods, and managing headers, this library offers a type-safe approach through a collection of request classes.",source:"@site/docs/at_rest/restful_requests.md",sourceDirName:"at_rest",slug:"/at_rest/restful_requests",permalink:"/fhir_fli_documentation/docs/at_rest/restful_requests",draft:!1,unlisted:!1,editUrl:"https://github.com/fhir-fli/fhir_fli_documentation/tree/main/docs/at_rest/restful_requests.md",tags:[],version:"current",frontMatter:{id:"restful_requests",title:"Requests"},sidebar:"tutorialSidebar",previous:{title:"At Rest Package",permalink:"/fhir_fli_documentation/docs/at_rest/fhir_r4_at_rest"},next:{title:"Parameters",permalink:"/fhir_fli_documentation/docs/at_rest/restful_parameters"}},l={},h=[{value:"Basic Concepts",id:"basic-concepts",level:2},{value:"Common Request Structure",id:"common-request-structure",level:2},{value:"Request Types",id:"request-types",level:2},{value:"1. Read Request",id:"1-read-request",level:3},{value:"2. VRead Request",id:"2-vread-request",level:3},{value:"3. Update Request",id:"3-update-request",level:3},{value:"4. Patch Request",id:"4-patch-request",level:3},{value:"5. Delete Request",id:"5-delete-request",level:3},{value:"6. Create Request",id:"6-create-request",level:3},{value:"7. History Request",id:"7-history-request",level:3},{value:"8. History All Request",id:"8-history-all-request",level:3},{value:"9. Capabilities Request",id:"9-capabilities-request",level:3},{value:"10. Transaction Request",id:"10-transaction-request",level:3},{value:"11. Batch Request",id:"11-batch-request",level:3},{value:"12. Operation Request",id:"12-operation-request",level:3},{value:"Request Parameters",id:"request-parameters",level:2},{value:"Working with HTTP Client",id:"working-with-http-client",level:2},{value:"Handling Responses",id:"handling-responses",level:2},{value:"Conclusion",id:"conclusion",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"restful-requests",children:"RESTful Requests"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"fhir_r4_at_rest"})," library provides a streamlined way to construct RESTful API calls for FHIR operations. Instead of dealing with the complexities of building URLs, handling HTTP methods, and managing headers, this library offers a type-safe approach through a collection of request classes."]}),"\n",(0,t.jsx)(n.h2,{id:"basic-concepts",children:"Basic Concepts"}),"\n",(0,t.jsxs)(n.p,{children:["All request classes in the library inherit from the abstract ",(0,t.jsx)(n.code,{children:"FhirRequest"})," class, which provides common functionality:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Base URL management"}),"\n",(0,t.jsx)(n.li,{children:"HTTP headers configuration"}),"\n",(0,t.jsx)(n.li,{children:"URI construction"}),"\n",(0,t.jsx)(n.li,{children:"Response handling"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-request-structure",children:"Common Request Structure"}),"\n",(0,t.jsx)(n.p,{children:"All request classes share a similar construction pattern:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirSomeRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'), // Base FHIR server URL\n  resourceType: 'Patient',                        // The FHIR resource type\n  id: '12345',                                   // Resource ID (when applicable)\n  headers: {'Authorization': 'Bearer token123'},  // Custom HTTP headers\n  parameters: RestfulParameters()                 // Optional request parameters\n    .requestPretty()\n    .add('_count', '10'),\n);\n\n// Execute the request\nfinal response = await request.sendRequest();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"request-types",children:"Request Types"}),"\n",(0,t.jsx)(n.p,{children:"The library supports all standard FHIR RESTful operations:"}),"\n",(0,t.jsx)(n.h3,{id:"1-read-request",children:"1. Read Request"}),"\n",(0,t.jsx)(n.p,{children:"Retrieves a specific resource by its ID."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirReadRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// GET http://hapi.fhir.org/baseR4/Patient/12345?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-vread-request",children:"2. VRead Request"}),"\n",(0,t.jsx)(n.p,{children:"Retrieves a specific version of a resource."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirVReadRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  vid: '2',  // Version ID\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// GET http://hapi.fhir.org/baseR4/Patient/12345/_history/2?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-update-request",children:"3. Update Request"}),"\n",(0,t.jsx)(n.p,{children:"Updates an existing resource."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirUpdateRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  resource: {\n    'resourceType': 'Patient',\n    'id': '12345',\n    'name': [\n      {\n        'given': ['John'],\n        'family': 'Doe',\n      },\n    ],\n  },\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// PUT http://hapi.fhir.org/baseR4/Patient/12345?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-patch-request",children:"4. Patch Request"}),"\n",(0,t.jsx)(n.p,{children:"Applies a partial update to a resource using JSON Patch."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final patchBody = PatchBody()\n  ..addOperation(\n    PatchOps.replace,\n    '/name/0/family',\n    value: 'Smith',\n  );\n\nfinal request = FhirPatchRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  patchBody: patchBody,\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// PATCH http://hapi.fhir.org/baseR4/Patient/12345?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-delete-request",children:"5. Delete Request"}),"\n",(0,t.jsx)(n.p,{children:"Deletes a resource by its ID."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirDeleteRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// DELETE http://hapi.fhir.org/baseR4/Patient/12345?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"6-create-request",children:"6. Create Request"}),"\n",(0,t.jsx)(n.p,{children:"Creates a new resource."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirCreateRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  resource: {\n    'resourceType': 'Patient',\n    'name': [\n      {\n        'given': ['John'],\n        'family': 'Doe',\n      },\n    ],\n  },\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// POST http://hapi.fhir.org/baseR4/Patient?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"7-history-request",children:"7. History Request"}),"\n",(0,t.jsx)(n.p,{children:"Retrieves the history of changes to a specific resource."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirHistoryRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// GET http://hapi.fhir.org/baseR4/Patient/12345/_history?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"8-history-all-request",children:"8. History All Request"}),"\n",(0,t.jsx)(n.p,{children:"Retrieves the history of changes to all resources."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirHistoryAllRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// GET http://hapi.fhir.org/baseR4/_history?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"9-capabilities-request",children:"9. Capabilities Request"}),"\n",(0,t.jsx)(n.p,{children:"Retrieves the server's capability statement."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirCapabilitiesRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  mode: Mode.normative,  // Optional: full, normative, or terminology\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// GET http://hapi.fhir.org/baseR4/metadata?mode=normative&_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"10-transaction-request",children:"10. Transaction Request"}),"\n",(0,t.jsx)(n.p,{children:"Submits a bundle of operations to be processed as a single transaction."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final bundle = Bundle(\n  type: BundleType.transaction,\n  entry: [\n    BundleEntry(\n      request: BundleRequest(\n        method: HTTPVerb.POST,\n        url: FhirUri('Patient'),\n      ),\n      resource: Patient(\n        name: [\n          HumanName(\n            family: FhirString('Doe'),\n            given: [FhirString('John')],\n          ),\n        ],\n      ),\n    ),\n  ],\n);\n\nfinal request = FhirTransactionRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  bundle: bundle.toJson(),\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// POST http://hapi.fhir.org/baseR4?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"11-batch-request",children:"11. Batch Request"}),"\n",(0,t.jsx)(n.p,{children:"Similar to Transaction but allows operations to be processed independently."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final bundle = Bundle(\n  type: BundleType.batch,\n  entry: [\n    BundleEntry(\n      request: BundleRequest(\n        method: HTTPVerb.GET,\n        url: FhirUri('Patient/12345'),\n      ),\n    ),\n    BundleEntry(\n      request: BundleRequest(\n        method: HTTPVerb.POST,\n        url: FhirUri('Observation'),\n      ),\n      resource: Observation(\n        status: ObservationStatus.final_,\n        code: CodeableConcept(\n          coding: [\n            Coding(\n              system: FhirUri('http://loinc.org'),\n              code: FhirCode('12345-6'),\n            ),\n          ],\n        ),\n      ),\n    ),\n  ],\n);\n\nfinal request = FhirBatchRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  bundle: bundle.toJson(),\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// POST http://hapi.fhir.org/baseR4?_format=json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"12-operation-request",children:"12. Operation Request"}),"\n",(0,t.jsx)(n.p,{children:"Invokes a named operation on the server, resource type, or resource instance."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"// Server-level operation\nfinal request = FhirOperationRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  operation: 'everything',\n  parameters: RestfulParameters()\n    .add('start', '2020-01-01')\n    .add('end', '2020-12-31'),\n  headers: {'Authorization': 'Bearer token123'},\n);\n\n// Resource type operation\nfinal typeRequest = FhirOperationRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  operation: 'everything',\n  headers: {'Authorization': 'Bearer token123'},\n);\n\n// Resource instance operation\nfinal instanceRequest = FhirOperationRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  operation: 'everything',\n  headers: {'Authorization': 'Bearer token123'},\n);\n\nfinal response = await request.sendRequest();\n// GET http://hapi.fhir.org/baseR4/$everything?start=2020-01-01&end=2020-12-31&_format=json\n// GET http://hapi.fhir.org/baseR4/Patient/$everything?_format=json\n// GET http://hapi.fhir.org/baseR4/Patient/12345/$everything?_format=json\n"})}),"\n",(0,t.jsx)(n.h2,{id:"request-parameters",children:(0,t.jsx)(n.a,{href:"docs/at_rest/restful_parameters",children:"Request Parameters"})}),"\n",(0,t.jsxs)(n.p,{children:["All request classes support optional parameters through the ",(0,t.jsx)(n.code,{children:"RestfulParameters"})," class:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final parameters = RestfulParameters()\n  .requestPretty()                     // Pretty-print the response\n  .requestSummary(Summary.true_)       // Request summary data only\n  .add('_count', '10')                 // Limit results to 10 items\n  .add('_since', '2020-01-01');        // Only include resources modified after this date\n  \nfinal request = FhirReadRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  parameters: parameters,\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"working-with-http-client",children:"Working with HTTP Client"}),"\n",(0,t.jsxs)(n.p,{children:["By default, the library uses ",(0,t.jsx)(n.code,{children:"http.Client()"})," to make requests. You can provide your own client for custom behavior:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final customClient = http.Client();\n\nfinal request = FhirReadRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  client: customClient,\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"handling-responses",children:"Handling Responses"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sendRequest()"})," method returns a standard ",(0,t.jsx)(n.code,{children:"http.Response"})," object:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final request = FhirReadRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n);\n\ntry {\n  final response = await request.sendRequest();\n  \n  if (response.statusCode == 200) {\n    // Parse the response body\n    final patient = Patient.fromJson(\n      jsonDecode(response.body),\n    );\n    // Use the patient resource\n  } else {\n    // Handle error responses\n    print('Error: ${response.statusCode} - ${response.body}');\n  }\n} catch (e) {\n  // Handle network or other exceptions\n  print('Exception: $e');\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"fhir_r4_at_rest"})," library simplifies interactions with FHIR servers by providing typed classes for each RESTful operation. This approach improves code readability and reduces the likelihood of errors when constructing FHIR API requests."]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(6540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);