"use strict";(self.webpackChunkfhir_fli_documentation=self.webpackChunkfhir_fli_documentation||[]).push([[468],{8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>c});var a=n(6540);const t={},i=a.createContext(t);function s(e){const r=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(i.Provider,{value:r},e.children)}},9203:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>o,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=n(4848),t=n(8453);const i={id:"restful_parameters",title:"Parameters"},s="RESTful Parameters",c={id:"at_rest/restful_parameters",title:"Parameters",description:"Introduction",source:"@site/docs/at_rest/restful_parameters.md",sourceDirName:"at_rest",slug:"/at_rest/restful_parameters",permalink:"/fhir_fli_documentation/docs/at_rest/restful_parameters",draft:!1,unlisted:!1,editUrl:"https://github.com/fhir-fli/fhir_fli_documentation/tree/main/docs/at_rest/restful_parameters.md",tags:[],version:"current",frontMatter:{id:"restful_parameters",title:"Parameters"},sidebar:"tutorialSidebar",previous:{title:"Requests",permalink:"/fhir_fli_documentation/docs/at_rest/restful_requests"},next:{title:"Database Package",permalink:"/fhir_fli_documentation/docs/fhir_r4_db"}},d={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Common Parameter Methods",id:"common-parameter-methods",level:2},{value:"General Parameters",id:"general-parameters",level:3},{value:"Custom Parameters",id:"custom-parameters",level:3},{value:"Resource-Specific Search Classes",id:"resource-specific-search-classes",level:2},{value:"Search Modifiers",id:"search-modifiers",level:2},{value:"Chaining Multiple Conditions",id:"chaining-multiple-conditions",level:2},{value:"Token Parameters",id:"token-parameters",level:2},{value:"Quantity Parameters",id:"quantity-parameters",level:2},{value:"Missing Values",id:"missing-values",level:2},{value:"Combined Searches",id:"combined-searches",level:2},{value:"POST Search",id:"post-search",level:2},{value:"Building the Query String",id:"building-the-query-string",level:2},{value:"Examples of Common Searches",id:"examples-of-common-searches",level:2},{value:"Patient Search Examples",id:"patient-search-examples",level:3},{value:"Observation Search Examples",id:"observation-search-examples",level:3},{value:"Conclusion",id:"conclusion",level:2}];function h(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h1,{id:"restful-parameters",children:"RESTful Parameters"}),"\n",(0,a.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(r.p,{children:["The ",(0,a.jsx)(r.code,{children:"fhir_r4_at_rest"})," library provides a streamlined approach to constructing FHIR query parameters through the ",(0,a.jsx)(r.code,{children:"RestfulParameters"})," class and resource-specific search classes. This system allows for type-safe, fluent construction of complex queries without having to manually build query strings."]}),"\n",(0,a.jsx)(r.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsxs)(r.p,{children:["The base ",(0,a.jsx)(r.code,{children:"RestfulParameters"})," class provides a flexible way to add common parameters to any FHIR request:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"final parameters = RestfulParameters()\n  .requestPretty()          // Pretty-print the response\n  .addCount(20)             // Limit results to 20 items\n  .add('_sort', 'date')     // Sort by date\n  .add('_include', 'Patient:organization');  // Include referenced Organization resources\n"})}),"\n",(0,a.jsxs)(r.p,{children:["This can be passed to any ",(0,a.jsx)(r.code,{children:"FhirRequest"})," class:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"final request = FhirReadRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  id: '12345',\n  parameters: parameters,\n);\n"})}),"\n",(0,a.jsx)(r.h2,{id:"common-parameter-methods",children:"Common Parameter Methods"}),"\n",(0,a.jsxs)(r.p,{children:["The ",(0,a.jsx)(r.code,{children:"RestfulParameters"})," class includes several convenience methods for commonly used parameters:"]}),"\n",(0,a.jsx)(r.h3,{id:"general-parameters",children:"General Parameters"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Limit results count\nparameters.addCount(20);\n\n// Request a specific page\nparameters.addPage(2);\n\n// Request pretty-printed responses\nparameters.requestPretty();\n\n// Specify response format\nparameters.addFormat('json');\n\n// Request summary data\nparameters.requestSummary(Summary.true_);\n// Other summary options: data, text, count\n"})}),"\n",(0,a.jsx)(r.h3,{id:"custom-parameters",children:"Custom Parameters"}),"\n",(0,a.jsxs)(r.p,{children:["For any parameter not covered by the convenience methods, you can use the generic ",(0,a.jsx)(r.code,{children:"add"})," method:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Sort by date descending\nparameters.add('_sort', '-date');\n\n// Filter by tag\nparameters.add('_tag', 'http://example.org/tags|needs-review');\n\n// Include referenced resources\nparameters.add('_include', 'Patient:organization');\n\n// Request elements subset\nparameters.add('_elements', 'name,birthDate,gender');\n"})}),"\n",(0,a.jsx)(r.h2,{id:"resource-specific-search-classes",children:"Resource-Specific Search Classes"}),"\n",(0,a.jsx)(r.p,{children:"For more precise control over resource-specific search parameters, the library provides generated search classes for each resource type:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Create a Patient search\nfinal patientSearch = SearchPatient()\n  .name(FhirString('Smith'))\n  .gender(FhirString('male'))\n  .birthdate(\n    FhirDateTime('1970-01-01'),\n    modifier: SearchModifier.ge, // Greater than or equal to\n  );\n\n// Use in a search request\nfinal request = FhirSearchRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  search: patientSearch,\n);\n"})}),"\n",(0,a.jsx)(r.p,{children:"The search classes provide type-safe methods for all valid search parameters defined in the FHIR specification for each resource type."}),"\n",(0,a.jsx)(r.h2,{id:"search-modifiers",children:"Search Modifiers"}),"\n",(0,a.jsx)(r.p,{children:"Many search parameters support modifiers that change how the search is performed:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Patient with birthdate greater than or equal to 1970-01-01\npatientSearch.birthdate(\n  FhirDateTime('1970-01-01'),\n  modifier: SearchModifier.ge,\n);\n\n// Patient with birthdate less than 2000-01-01\npatientSearch.birthdate(\n  FhirDateTime('2000-01-01'),\n  modifier: SearchModifier.lt,\n);\n\n// Patient with a name that exactly equals \"John Smith\"\npatientSearch.name(\n  FhirString('John Smith'),\n  modifier: SearchModifier.eq,\n);\n"})}),"\n",(0,a.jsx)(r.p,{children:"Available modifiers depend on the parameter type:"}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Parameter Type"}),(0,a.jsx)(r.th,{children:"Supported Modifiers"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"String"}),(0,a.jsxs)(r.td,{children:[(0,a.jsx)(r.code,{children:"eq"}),", ",(0,a.jsx)(r.code,{children:"ne"})]}),(0,a.jsx)(r.td,{children:"Exact match, not equal"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"Quantity"}),(0,a.jsxs)(r.td,{children:[(0,a.jsx)(r.code,{children:"gt"}),", ",(0,a.jsx)(r.code,{children:"lt"}),", ",(0,a.jsx)(r.code,{children:"ge"}),", ",(0,a.jsx)(r.code,{children:"le"}),", ",(0,a.jsx)(r.code,{children:"ap"})]}),(0,a.jsx)(r.td,{children:"Numeric comparisons"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"Date"}),(0,a.jsxs)(r.td,{children:[(0,a.jsx)(r.code,{children:"gt"}),", ",(0,a.jsx)(r.code,{children:"lt"}),", ",(0,a.jsx)(r.code,{children:"ge"}),", ",(0,a.jsx)(r.code,{children:"le"}),", ",(0,a.jsx)(r.code,{children:"ap"})]}),(0,a.jsx)(r.td,{children:"Date comparisons"})]})]})]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Token and Reference Search Modifiers are not yet available"}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"chaining-multiple-conditions",children:"Chaining Multiple Conditions"}),"\n",(0,a.jsx)(r.p,{children:"The fluent API allows for building complex queries by chaining multiple conditions:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Find all female patients born after 1980 with the last name \"Smith\"\nfinal search = SearchPatient()\n  .gender(FhirString('female'))\n  .birthdate(\n    FhirDateTime('1980-01-01'),\n    modifier: SearchModifier.gt,\n  )\n  .family(FhirString('Smith'));\n\n// The resulting query would be:\n// Patient?gender=female&gtbirthdate=1980-01-01&family=Smith\n"})}),"\n",(0,a.jsx)(r.h2,{id:"token-parameters",children:"Token Parameters"}),"\n",(0,a.jsx)(r.p,{children:"Token parameters (like identifiers) allow for system and value pairs:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Search for a patient with a specific MRN\nfinal search = SearchPatient()\n  .identifier(\n    FhirString('12345'),\n    system: FhirUri('http://hospital.example.org/identifiers/mrn'),\n  );\n\n// The resulting query would be:\n// Patient?identifier=http://hospital.example.org/identifiers/mrn|12345\n"})}),"\n",(0,a.jsx)(r.h2,{id:"quantity-parameters",children:"Quantity Parameters"}),"\n",(0,a.jsx)(r.p,{children:"Quantity parameters include value, unit, and system:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Search for observations with systolic blood pressure over 140 mmHg\nfinal search = SearchObservation()\n  .code(\n    FhirString('8480-6'),\n    system: FhirUri('http://loinc.org'),\n  )\n  .valueQuantity(\n    FhirDecimal(140.0),\n    unit: FhirString('mm[Hg]'),\n    system: FhirUri('http://unitsofmeasure.org'),\n    modifier: SearchModifier.gt,\n  );\n"})}),"\n",(0,a.jsx)(r.h2,{id:"missing-values",children:"Missing Values"}),"\n",(0,a.jsxs)(r.p,{children:["You can search for resources where a parameter is missing using the special ",(0,a.jsx)(r.code,{children:":missing"})," modifier:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Add a parameter directly\nparameters.add('gender:missing', 'true');\n\n// Or use the search classes (this will need to be added in a future version)\n"})}),"\n",(0,a.jsx)(r.h2,{id:"combined-searches",children:"Combined Searches"}),"\n",(0,a.jsxs)(r.p,{children:["For complex searches across multiple resources, you can use the ",(0,a.jsx)(r.code,{children:"FhirSearchRequest"}),' with type "All":']}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Search for all resources mentioning \"Smith\"\nfinal search = SearchResource()\n  .parameters.addAll({\n    '_type': 'Patient,Practitioner',\n    'name': 'Smith',\n  });\n\nfinal request = FhirSearchRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'All',\n  search: search,\n);\n"})}),"\n",(0,a.jsx)(r.h2,{id:"post-search",children:"POST Search"}),"\n",(0,a.jsx)(r.p,{children:"For very long or complex queries, you can use POST instead of GET:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"final request = FhirSearchRequest(\n  base: Uri.parse('http://hapi.fhir.org/baseR4'),\n  resourceType: 'Patient',\n  search: patientSearch,\n  usePost: true,  // Use POST method\n);\n"})}),"\n",(0,a.jsx)(r.p,{children:"This will send the search parameters in the request body instead of the URL."}),"\n",(0,a.jsx)(r.h2,{id:"building-the-query-string",children:"Building the Query String"}),"\n",(0,a.jsx)(r.p,{children:"When you need to access the raw query string for debugging or other purposes:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"final queryString = parameters.buildQuery();\nprint(queryString); // _count=20&_pretty=true&_sort=date\n"})}),"\n",(0,a.jsx)(r.h2,{id:"examples-of-common-searches",children:"Examples of Common Searches"}),"\n",(0,a.jsx)(r.h3,{id:"patient-search-examples",children:"Patient Search Examples"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Find patients with a specific MRN\nfinal search = SearchPatient()\n  .identifier(\n    FhirString('12345'),\n    system: FhirUri('http://hospital.example.org/identifiers/mrn'),\n  );\n\n// Find patients by name and birthdate range\nfinal search = SearchPatient()\n  .name(FhirString('Smith'))\n  .birthdate(\n    FhirDateTime('1950-01-01'),\n    modifier: SearchModifier.ge,\n  )\n  .birthdate(\n    FhirDateTime('1970-01-01'),\n    modifier: SearchModifier.le,\n  );\n\n// Find patients by address\nfinal search = SearchPatient()\n  .addressCity(FhirString('Boston'))\n  .addressState(FhirString('MA'));\n"})}),"\n",(0,a.jsx)(r.h3,{id:"observation-search-examples",children:"Observation Search Examples"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"// Find blood pressure observations\nfinal search = SearchObservation()\n  .code(\n    FhirString('85354-9'),\n    system: FhirUri('http://loinc.org'),\n  )\n  .date(\n    FhirDateTime('2023-01-01'),\n    modifier: SearchModifier.gt,\n  );\n\n// Find observations by value range\nfinal search = SearchObservation()\n  .code(\n    FhirString('8867-4'),\n    system: FhirUri('http://loinc.org'),\n  ) // Heart rate\n  .valueQuantity(\n    FhirDecimal(100.0),\n    unit: FhirString('/min'),\n    modifier: SearchModifier.gt,\n  );\n"})}),"\n",(0,a.jsx)(r.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsxs)(r.p,{children:["The RESTful parameters system in ",(0,a.jsx)(r.code,{children:"fhir_r4_at_rest"})," provides a powerful, type-safe approach to constructing FHIR query parameters. By using the fluent API and resource-specific search classes, you can build complex queries with confidence, knowing that the parameter names and types are validated against the FHIR specification."]})]})}function o(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);